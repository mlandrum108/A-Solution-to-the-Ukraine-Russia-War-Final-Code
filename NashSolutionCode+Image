import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d.art3d import Poly3DCollection
from mpl_toolkits.mplot3d import Axes3D
from scipy.spatial import ConvexHull
import numpy as np

def solutions(ndim, feasible, dpp):
    from sage.all import Polyhedron, vector, SR, minimize_constrained, prod

    points = feasible.copy()
    points.append(dpp)
    possible = Polyhedron(points)

    con = [[0 for _ in range(ndim + 1)] for _ in range(ndim)]
    for i in range(ndim):
        con[i][i + 1] = 1
        con[i][0] = -dpp[i]
    ratn = possible.intersection(Polyhedron(ieqs=con))

    x = SR.var('x', ndim)
    v = vector([1] + list(x))
    con1 = [str(vector(c) * v) for c in ratn.inequalities_list()]
    con2 = ['lambda x: ' + c.replace('x0', 'x[0]').replace('x1', 'x[1]').replace('x2', 'x[2]') for c in con1]
    con3 = [eval(c) for c in con2]
    obj = lambda x: -prod([x[i] - dpp[i] for i in range(ndim)])
    vertices = [list(v) for v in ratn.vertices()]
    start = np.mean(vertices, axis=0).tolist()
    nash = minimize_constrained(obj, con3, start)

    return nash

# Setup
ndim = 3
feasible = [
    (100, 0, 78), (0, 100, 12), (80, 15, 78),
    (20, 85, 12), (40, 50, 58), (40, 65, 48),
    (60, 35, 30), (60, 50, 48)
]
dpp = (40, 35, 0)

# Solve
nash = solutions(ndim, feasible, dpp)
nash_int = tuple(int(round(coord)) for coord in nash)

# Plotting with final adjustments
angles = [30, 60, 90, 120, 150, 180]
feasible_np = np.array(feasible)
hull = ConvexHull(feasible_np)
figsize = (10, 8)
dpi = 150

for angle in angles:
    fig = plt.figure(figsize=figsize, dpi=dpi)
    ax = fig.add_subplot(111, projection='3d')

    ax.scatter(feasible_np[:, 0], feasible_np[:, 1], feasible_np[:, 2], color='dimgray', s=40)

    for simplex in hull.simplices:
        pts = feasible_np[simplex]
        tri = Poly3DCollection([pts], alpha=0.15, facecolor='gray', edgecolor='black')
        ax.add_collection3d(tri)

    # Nash solution (rounded)
    ax.scatter(*nash, color='black', s=100)
    ax.text(nash[0], nash[1], nash[2] + 2, 
            f'Nash\n{nash_int}', fontsize=9, color='black',
            ha='left', va='bottom')

    # Disagreement point
    ax.scatter(*dpp, color='magenta', s=100)
    ax.text(dpp[0], dpp[1], dpp[2] + 2,
            f'Disagreement\n{dpp}', fontsize=9, color='magenta',
            ha='left', va='bottom')

    ax.set_xlabel('Ukraine')
    ax.set_ylabel('Russia')
    ax.set_zlabel('West')

    ax.view_init(elev=25, azim=angle)
    plt.tight_layout()
    plt.show()
